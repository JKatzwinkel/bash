#!/bin/bash

# read file line by line
while read line; do ...; done < filename

# reduce pdf file size
gs -sDEVICE=pdfwrite -dPDFSETTINGS=/screen -dCompatibilityLevel=1.4 -dNOPAUSE -dQUIET -dBATCH -sOutputFile=output.pdf input.pdf

# bashrc: set terminal window title to current directory:
PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD}\007"'
# limits the path shown to 20 characters max:
_PS1 ()
{
  local PRE= NAME="$1" LENGTH="$2";
  [[ "$NAME" != "${NAME#$HOME/}" || -z "${NAME#$HOME}" ]] &&
    PRE+='~' NAME="${NAME#$HOME}" LENGTH=$[LENGTH-1];
  ((${#NAME}>$LENGTH)) && NAME="/...${NAME:$[${#NAME}-LENGTH+4]}";
  echo "$PRE$NAME"
}
PS1='\u@\h:$(_PS1 "$PWD" 20)\$ '


# string operations
${stringZ:1} # substring beginning with second character
${string#substring}  # delete shortest substring from front
${string##substring}  # delete longest substring from front
${string%substring}  # delete shortest substring from back

# arrays:
arr=( $(echo "eins zwei" | grep -o "[^ ]*") )
echo ${arr[@]} #entire array
echo ${#arr[@]} #length
#fixed prefix:
array=$( "${array[@]/%/_content}" )

# format numbers:
printf "%3.3d" $x # trailing 0s, 3 digits
printf "%x\n" $decimal #hex value
printf "%x %o\n" 0224 0x94 #hex representation of octal number 224, octal of 94 hex

# floating numbers:
ratio=$(echo "scale=2; $count/$total" | bc)

# hexdump:
echo bla | hexdump -C

# set permissions recursively to 755 for directories and to 644 for files
# chmod u+X on a file won't set the execute bit; and g+X will only set it 
# if it's already set for the user
chmod -R u+rwX,go+rX,go-w /path

# set:
set -- path/*/someglob.txt # assign matching filenames to $1, $2,.. ($* or $@)

# sed:
# inserting text before or after every line that matches a line number
# or the given pattern: (replace 'i' with 'a' to append)
sed -i '1 i\line to insert' file  #insert 'line to insert' right
sed -i '1iline to insert' file    #before the first line in file
sed -i '/pattern/ i\new line' file  #insert text before every line
sed -i '/pattern/inew line' file    #matching the pattern
sed -i '$aLast Line' file         # appending text after last line in file

# create a backup file when editing in place:
sed -i~
